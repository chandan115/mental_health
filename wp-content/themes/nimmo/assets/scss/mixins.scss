// Sass CSS3 Mixins! The Cross-Browser CSS3 Sass Library
// By: Matthieu Aussaguel, http://www.mynameismatthieu.com, @matthieu_tweets

// Ascending
// Used to evaluate Sass maps like our grid breakpoints.
@mixin _assert-ascending($map, $map-name) {
  $prev-key: null;
  $prev-num: null;
  @each $key, $num in $map {
    @if $prev-num == null {
      // Do nothing
    } @else if not comparable($prev-num, $num) {
      @warn "Potentially invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} whose unit makes it incomparable to #{$prev-num}, the value of the previous key '#{$prev-key}' !";
    } @else if $prev-num >= $num {
      @warn "Invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} which isn't greater than #{$prev-num}, the value of the previous key '#{$prev-key}' !";
    }
    $prev-key: $key;
    $prev-num: $num;
  }
}

// Starts at zero
// Another grid mixin that ensures the min-width of the lowest breakpoint starts at 0.
@mixin _assert-starts-at-zero($map) {
  $values: map-values($map);
  $first-value: nth($values, 1);
  @if $first-value != 0 {
    @warn "First breakpoint in `$grid-breakpoints` must start at 0, but starts at #{$first-value}.";
  }
}


// ADDS A BROWSER PREFIX TO THE PROPERTY
@mixin css3-prefix($property, $value) {
    -webkit-#{$property}: #{$value};
    -khtml-#{$property}: #{$value};
    -moz-#{$property}: #{$value};
    -ms-#{$property}: #{$value};
    -o-#{$property}: #{$value};
    #{$property}: #{$value};
}

// BACKGROUND GRADIENT

@mixin background-gradient-button($rotate, $color1, $color2, $color3) {
    background-image: -webkit-linear-gradient($rotate, $color1, $color2, $color3);
    background-image:    -moz-linear-gradient($rotate, $color1, $color2, $color3);
    background-image:     -ms-linear-gradient($rotate, $color1, $color2, $color3);
    background-image:      -o-linear-gradient($rotate, $color1, $color2, $color3);
    background-image:         linear-gradient($rotate, $color1, $color2, $color3);
    filter:            progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}');
}


@mixin background-gradient-rotate($rotate, $startColor, $endColor) {
    background-image: -webkit-linear-gradient($rotate, $startColor, $endColor);
    background-image:    -moz-linear-gradient($rotate, $startColor, $endColor);
    background-image:     -ms-linear-gradient($rotate, $startColor, $endColor);
    background-image:      -o-linear-gradient($rotate, $startColor, $endColor);
    background-image:         linear-gradient($rotate, $startColor, $endColor);
    filter:            progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}');
}

@mixin background-gradient-top($startColor: #ffb400, $endColor: #f9a33a) {
    background-image: -webkit-gradient(linear, left top, left bottom, from($startColor), to($endColor));
    background-image: -webkit-linear-gradient(top, $startColor, $endColor);
    background-image:    -moz-linear-gradient(top, $startColor, $endColor);
    background-image:     -ms-linear-gradient(top, $startColor, $endColor);
    background-image:      -o-linear-gradient(top, $startColor, $endColor);
    background-image:         linear-gradient(top, $startColor, $endColor);
    filter:            progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}');
}
@mixin background-gradient-bottom($startColor: #ffb400, $endColor: #f9a33a) {
    background-image: -webkit-gradient(linear, left top, left bottom, from($startColor), to($endColor));
    background-image: -webkit-linear-gradient(bottom, $startColor, $endColor);
    background-image:    -moz-linear-gradient(bottom, $startColor, $endColor);
    background-image:     -ms-linear-gradient(bottom, $startColor, $endColor);
    background-image:      -o-linear-gradient(bottom, $startColor, $endColor);
    background-image:         linear-gradient(bottom, $startColor, $endColor);
    filter:            progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}');
}

// BACKGROUND HORIZONTAL
@mixin background-horizontal($startColor: #ffb400, $endColor: #f9a33a) {
    background-color: $startColor;
    background-image: -webkit-gradient(linear, left top, right top, from($startColor), to($endColor));
    background-image: -webkit-linear-gradient(left, $startColor, $endColor);
    background-image:    -moz-linear-gradient(left, $startColor, $endColor);
    background-image:     -ms-linear-gradient(left, $startColor, $endColor);
    background-image:      -o-linear-gradient(left, $startColor, $endColor);
    background-image:         linear-gradient(left, $startColor, $endColor);
    filter:            progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}', gradientType='1');
}

// BACKGROUND RADIAL
@mixin background-radial($startColor: #FFFFFF, $startPos: 0%, $endColor: #000000, $endPos:100%) {
    background: -moz-radial-gradient(center, ellipse cover, $startColor $startPos, $endColor $endPos);
    background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop($startPos,$startColor), color-stop($endPos,$endColor));
    background: -webkit-radial-gradient(center, ellipse cover, $startColor $startPos,$endColor $endPos);
    background: -o-radial-gradient(center, ellipse cover, $startColor $startPos,$endColor $endPos);
    background: -ms-radial-gradient(center, ellipse cover, $startColor $startPos,$endColor $endPos);
    background: radial-gradient(ellipse at center, $startColor $startPos,$endColor $endPos);
}

// BACKGROUND SIZE
@mixin background-size($width: 100%, $height: $width) {
    @if type-of($width) == 'number' and $height != null {
        @include css3-prefix('background-size', $width $height);
    } @else {
        @include css3-prefix('background-size', $width);
    }
}

// BACKGROUND COLOR OPACITY
@mixin background-opacity($color: #000, $opacity: 0.85) {
    background: $color;
    background: rgba($color, $opacity);
}

// BORDER RADIUS
@mixin border-radius($radius: 5px) {
    @include css3-prefix('border-radius', $radius);
}

@mixin border-radius-separate($topLeftRadius: 5px, $topRightRadius: 5px, $bottomLeftRadius: 5px, $bottomRightRadius: 5px) {
    -webkit-border-top-left-radius:     $topLeftRadius;
    -webkit-border-top-right-radius:    $topRightRadius;
    -webkit-border-bottom-right-radius: $bottomRightRadius;
    -webkit-border-bottom-left-radius:  $bottomLeftRadius;

    -moz-border-radius-topleft:     $topLeftRadius;
    -moz-border-radius-topright:    $topRightRadius;
    -moz-border-radius-bottomright: $bottomRightRadius;
    -moz-border-radius-bottomleft:  $bottomLeftRadius;

    border-top-left-radius:     $topLeftRadius;
    border-top-right-radius:    $topRightRadius;
    border-bottom-right-radius: $bottomRightRadius;
    border-bottom-left-radius:  $bottomLeftRadius;
}

// BOX
@mixin box($orient: horizontal, $pack: center, $align: center) {
    display: -webkit-box;
    display: -moz-box;
    display: box;

    @include css3-prefix('box-orient', $orient);
    @include css3-prefix('box-pack', $pack);
    @include css3-prefix('box-align', $align);
}

// BOX RGBA
@mixin box-rgba($r: 60, $g: 3, $b: 12, $opacity: 0.23, $color: #3C3C3C) {
    background-color: transparent;
    background-color: rgba($r, $g, $b, $opacity);
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$color}',endColorstr='#{$color}');
    zoom:   1;
}


// BOX SHADOW
@mixin box-shadow($x) {
    @include css3-prefix('box-shadow', $x);
}

// BOX SIZING
@mixin box-sizing($type: border-box) {
    @include css3-prefix('box-sizing', $type);
}

// COLUMNS
@mixin columns($count: 3, $gap: 10) {
    @include css3-prefix('column-count', $count);
    @include css3-prefix('column-gap', $gap);
}

// DOUBLE BORDERS
@mixin double-borders($colorOne: #3C3C3C, $colorTwo: #999999, $radius: 0) {
    border: 1px solid $colorOne;

    @include css3-prefix('box-shadow', 0 0 0 1px $colorTwo);

    @include border-radius( $radius );
}

// FLEX
@mixin flex($value: 1) {
    @include css3-prefix('box-flex', $value);
}

// FLIP
@mixin flip($scaleX: -1) {
    @include css3-prefix('transform', scaleX($scaleX));
    filter:            FlipH;
    -ms-filter:        "FlipH";
}

// FONT FACE
@mixin font-face($fontFamily: myFont, $eotFileSrc: 'myFont.eot', $woffFileSrc: 'myFont.woff', $ttfFileSrc: 'myFont.ttf', $svgFileSrc: 'myFont.svg', $svgFontID: '#myFont') {
    font-family: $fontFamily;
    src: url($eotFileSrc)  format('eot'),
    url($woffFileSrc) format('woff'),
    url($ttfFileSrc)  format('truetype'),
    url($svgFileSrc + $svgFontID) format('svg');
}

// OPACITY
@mixin opacity($opacity: 0.5) {
    $opacityMultiplied: ($opacity * 100);

    filter:         alpha(opacity=$opacityMultiplied);
    -ms-filter:     "progid:DXImageTransform.Microsoft.Alpha(Opacity=" + $opacityMultiplied + ")";
    @include css3-prefix('opacity', $opacity);
}


// OUTLINE RADIUS
@mixin outline-radius($radius: 5px) {
    @include css3-prefix('outline-radius', $radius);
}

// RESIZE
@mixin resize($direction: both) {
    @include css3-prefix('resize', $direction);
}

// ROTATE
@mixin rotate($deg: 0, $m11: 0, $m12: 0, $m21: 0, $m22: 0) {
    @include css3-prefix('transform', rotate($deg + deg));
    filter: progid:DXImageTransform.Microsoft.Matrix(
                    M11=#{$m11}, M12=#{$m12}, M21=#{$m21}, M22=#{$m22}, sizingMethod='auto expand');
    zoom: 1;
}

// TEXT SHADOW
@mixin text-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0,0,0,.4)) {
    text-shadow: $x $y $blur $color;
}

// TRANSFORM
@mixin transform($params) {
    @include css3-prefix('transform', $params);
}

// TRANSFORM STYLE
@mixin transform-style($style: preserve-3d) {
    @include css3-prefix('transform-style', $style);
}

// TRANSITION
@mixin transition($properties...) {

    @if length($properties) >= 1 {
        @include css3-prefix('transition', $properties);
    }

    @else {
        @include css3-prefix('transition', $what: all, $length: 1s, $easing: ease-in-out);
    }
}

// TRIPLE BORDERS
@mixin triple-borders($colorOne: #3C3C3C, $colorTwo: #999999, $colorThree: #000000, $radius: 0) {
    border: 1px solid $colorOne;

    @include border-radius($radius);

    @include css3-prefix('box-shadow', 0 0 0 1px $colorTwo, 0 0 0 2px $colorThree);
}

// KEYFRAMES
@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }
    @-ms-keyframes #{$animation-name} {
        @content;
    }
    @-o-keyframes #{$animation-name} {
        @content;
    }
    @keyframes #{$animation-name} {
        @content;
    }
}

// ANIMATION
@mixin animation($str) {
    @include css3-prefix('animation', $str);
}


// ThemeAmber
// Rem output with px fallback
@mixin font-size($sizeValue: 1) {
    font-size: ($sizeValue * 16) * 1px;
    font-size: $sizeValue * 1rem;
}

// Center block
@mixin center-block {
    display: block;
    margin-left: auto;
    margin-right: auto;
}

// Clearfix
@mixin clearfix() {
    content: "";
    display: table;
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after() {
    clear: both;
}

// Move up for CMS Grid
@-webkit-keyframes moveUp {
    0% { }
    100% { -webkit-transform: translateY(0); opacity: 1; }
}

@keyframes moveUp {
    0% { }
    100% { -webkit-transform: translateY(0); transform: translateY(0); opacity: 1; }
}

@keyframes spin-rotate-left{  to{    transform:rotate(30deg)}
  from{    transform:rotate(175deg)}
}
@-webkit-keyframes spin-rotate-left{  to{    transform:rotate(30deg)}
  from{    transform:rotate(175deg)}
}
@keyframes spin-rotate-right{  from{    transform:rotate(-175deg)}
  to{    transform:rotate(-30deg)}
}
@-webkit-keyframes spin-rotate-right{  from{    transform:rotate(-175deg)}
  to{    transform:rotate(-30deg)}
}
@keyframes spin-rotate-all{  from{    transform:rotate(0deg)}
  to{    transform:rotate(-360deg)}
}
@-webkit-keyframes spin-rotate-all{  from{    transform:rotate(0deg)}
  to{    transform:rotate(-360deg)}
}
@keyframes spin-fade-in-first{  from{  opacity:1}
  to{  opacity:0}
}
@-webkit-keyframes spin-fade-in-first{  from{  opacity:1}
  to{  opacity:0}
}
@keyframes spin-fade-in-second{  from{  opacity:0}
  to{  opacity:1}
}
@-webkit-keyframes spin-fade-in-second{  from{  opacity:0}
  to{  opacity:1}
}
@-webkit-keyframes markerWave {
    0% {
        -webkit-transform: scale(1);
        transform: scale(1);
        opacity: .8
    }
    20% {
        opacity: .8
    }
    100% {
        -webkit-transform: scale(5.5);
        transform: scale(5.5);
        opacity: 0
    }
}
@keyframes markerWave {
    0% {
        -webkit-transform: scale(1);
        transform: scale(1);
        opacity: .8
    }
    20% {
        opacity: .8
    }
    100% {
        -webkit-transform: scale(5.5);
        transform: scale(5.5);
        opacity: 0
    }
}

@-webkit-keyframes rotateplane {
    0%{
        -webkit-transform:perspective(120px)
    }
    50%{
        -webkit-transform:perspective(120px) rotateY(180deg)
    }
    100%{
        -webkit-transform:perspective(120px) rotateY(180deg) rotateX(180deg)
    }
}
@keyframes rotateplane {
    0%{
        -webkit-transform:perspective(120px) rotateX(0deg) rotateY(0deg);
        transform:perspective(120px) rotateX(0deg) rotateY(0deg)
    }
    50%{
        -webkit-transform:perspective(120px) rotateX(-180.1deg) rotateY(0deg);
        transform:perspective(120px) rotateX(-180.1deg) rotateY(0deg)
    }
    100%{
        -webkit-transform:perspective(120px) rotateX(-180deg) rotateY(-179.9deg);
        transform:perspective(120px) rotateX(-180deg) rotateY(-179.9deg)
    }
}

@-webkit-keyframes ct-bounce {
  0%, 100% { -webkit-transform: scale(0.0) }
  50% { -webkit-transform: scale(1.0) }
}

@keyframes ct-bounce {
  0%, 100% { 
    transform: scale(0.0);
    -webkit-transform: scale(0.0);
  } 50% { 
    transform: scale(1.0);
    -webkit-transform: scale(1.0);
  }
}

@-webkit-keyframes ct-stretchdelay {
  0%, 40%, 100% { -webkit-transform: scaleY(0.4) }  
  20% { -webkit-transform: scaleY(1.0) }
}

@keyframes ct-stretchdelay {
  0%, 40%, 100% { 
    transform: scaleY(0.4);
    -webkit-transform: scaleY(0.4);
  }  20% { 
    transform: scaleY(1.0);
    -webkit-transform: scaleY(1.0);
  }
}
@-webkit-keyframes ct-bouncedelay {
  0%, 80%, 100% { -webkit-transform: scale(0) }
  40% { -webkit-transform: scale(1.0) }
}

@keyframes ct-bouncedelay {
  0%, 80%, 100% { 
    -webkit-transform: scale(0);
    transform: scale(0);
  } 40% { 
    -webkit-transform: scale(1.0);
    transform: scale(1.0);
  }
}
@-webkit-keyframes ct-cubeGridScaleDelay {
  0%, 70%, 100% {
    -webkit-transform: scale3D(1, 1, 1);
            transform: scale3D(1, 1, 1);
  } 35% {
    -webkit-transform: scale3D(0, 0, 1);
            transform: scale3D(0, 0, 1); 
  }
}

@keyframes ct-cubeGridScaleDelay {
  0%, 70%, 100% {
    -webkit-transform: scale3D(1, 1, 1);
            transform: scale3D(1, 1, 1);
  } 35% {
    -webkit-transform: scale3D(0, 0, 1);
            transform: scale3D(0, 0, 1);
  } 
}
@-webkit-keyframes ct-foldCubeAngle {
  0%, 10% {
    -webkit-transform: perspective(140px) rotateX(-180deg);
            transform: perspective(140px) rotateX(-180deg);
    opacity: 0; 
  } 25%, 75% {
    -webkit-transform: perspective(140px) rotateX(0deg);
            transform: perspective(140px) rotateX(0deg);
    opacity: 1; 
  } 90%, 100% {
    -webkit-transform: perspective(140px) rotateY(180deg);
            transform: perspective(140px) rotateY(180deg);
    opacity: 0; 
  } 
}

@keyframes ct-foldCubeAngle {
  0%, 10% {
    -webkit-transform: perspective(140px) rotateX(-180deg);
            transform: perspective(140px) rotateX(-180deg);
    opacity: 0; 
  } 25%, 75% {
    -webkit-transform: perspective(140px) rotateX(0deg);
            transform: perspective(140px) rotateX(0deg);
    opacity: 1; 
  } 90%, 100% {
    -webkit-transform: perspective(140px) rotateY(180deg);
            transform: perspective(140px) rotateY(180deg);
    opacity: 0; 
  }
}

@keyframes ball {
  0% {
    transform: translate(0, 0);
  }
  5% {
    transform: translate(8px, -14px);
  }
  10% {
    transform: translate(15px, -10px)
  }
  17% {
    transform: translate(23px, -24px)
  }
  20% {
    transform: translate(30px, -20px)
  }
  27% {
    transform: translate(38px, -34px)
  }
  30% {
    transform: translate(45px, -30px)
  }
  37% {
    transform: translate(53px, -44px)
  }
  40% {
    transform: translate(60px, -40px)
  }
  50% {
    transform: translate(60px, 0)
  }
  57% {
    transform: translate(53px, -14px)
  }
  60% {
    transform: translate(45px, -10px)
  }
  67% {
    transform: translate(37px, -24px)
  }
  70% {
    transform: translate(30px, -20px)
  }
  77% {
    transform: translate(22px, -34px)
  }
  80% {
    transform: translate(15px, -30px)
  }
  87% {
    transform: translate(7px, -44px)
  }
  90% {
    transform: translate(0, -40px)
  }
  100% {
    transform: translate(0, 0);
  }
}
@keyframes barUp1 { 
  0% {
    transform: scale(1, .2);
  }
  40%{
    transform: scale(1, .2);
  }
  50% {
    transform: scale(1, 1);
  }
  90% {
    transform: scale(1,1);
  }
  100% {
    transform: scale(1,.2);
  }
}
@keyframes barUp2 { 
  0% {
    transform: scale(1, .4);
  }
  40% {
    transform: scale(1, .4);
  }
  50% {
    transform: scale(1, .8);
  }
  90% {
    transform: scale(1, .8);
  }
  100% {
    transform: scale(1, .4);
  }
}
@keyframes barUp3 { 
  0% {
    transform: scale(1, .6);
  }
  100% {
    transform: scale(1, .6);
  }
}
@keyframes barUp4 { 
  0% {
    transform: scale(1, .8);
  }
  40% {
    transform: scale(1, .8);
  }
  50% {
    transform: scale(1, .4);
  }
  90% {
    transform: scale(1, .4);
  }
  100% {
    transform: scale(1, .8);
  }
}
@keyframes barUp5 { 
  0% {
    transform: scale(1, 1);
  }
  40% {
    transform: scale(1, 1);
  }
  50% {
    transform: scale(1, .2);
  }
  90% {
    transform: scale(1, .2);
  }
  100% {
    transform: scale(1, 1);
  }
}

@-moz-keyframes headerSlideDown{
  0%{ 
    margin-top:-150px;
  }
  100%{
    margin-top:0
  }
}
@-ms-keyframes headerSlideDown{
  0%{ 
    margin-top:-150px;
  }
  100%{
    margin-top:0
  }
}
@-webkit-keyframes headerSlideDown{
  0%{ 
    margin-top:-150px;
  }
  100%{
    margin-top:0
  }
}
@keyframes headerSlideDown{
  0%{ 
    margin-top:-150px;
  }
  100%{
    margin-top:0
  }
}


@-webkit-keyframes ct-rotate { 100% { -webkit-transform: rotate(360deg) }}
@keyframes ct-rotate { 100% { transform: rotate(360deg); -webkit-transform: rotate(360deg) }}

@-webkit-keyframes ct-bounce {
  0%, 100% { -webkit-transform: scale(0.0) }
  50% { -webkit-transform: scale(1.0) }
}

@-webkit-keyframes video-icon-animation {
  from {
    -webkit-transform: scale(1, 1);
    transform: scale(1, 1);
    opacity: 1;
  }
  to {
    -webkit-transform: scale(2, 2);
    transform: scale(2, 2);
    opacity: 0;
  }
}

@keyframes video-icon-animation {
  from {
    -webkit-transform: scale(1, 1);
    transform: scale(1, 1);
    opacity: 1;
  }
  to {
    -webkit-transform: scale(2, 2);
    transform: scale(2, 2);
    opacity: 0;
  }
}

@keyframes blink {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
@-webkit-keyframes blink {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@-webkit-keyframes hvrpulse{
    25%{
        -webkit-transform:scale(1.1);
        transform:scale(1.1)
    }
    75%{
        -webkit-transform:scale(0.9);
        transform:scale(0.9)
    }
}
@keyframes hvrpulse{
    25%{
        -webkit-transform:scale(1.1);
        transform:scale(1.1)
    }
    75%{
        -webkit-transform:scale(0.9);
        transform:scale(0.9)
    }
}

@-webkit-keyframes bounceReadMore{
    0%{
        margin-bottom:30px
    }
    50%{
        margin-bottom:-10px
    }
     100%{
        margin-bottom:0
    }
}
@-moz-keyframes bounceReadMore{
    0%{
        margin-bottom:30px
    }
     50%{
        margin-bottom:-10px
    }
    100%{
        margin-bottom:0
    }
}
@-o-keyframes bounceReadMore{
    0%{
        margin-bottom:30px
    }
     50%{
        margin-bottom:-10px
    }
    100%{
        margin-bottom:0
    }
}
@keyframes bounceReadMore{
    0%{
        margin-bottom:30px
    }
     50%{
        margin-bottom:-10px
    }
    100%{
        margin-bottom:0
    }
}

@-webkit-keyframes toRightFromLeft {
  49% {
    -webkit-transform: translate(100%);
  }
  50% {
    opacity: 0;
    -webkit-transform: translate(-100%);
  }
  51% {
    opacity: 1;
  }
}
@-moz-keyframes toRightFromLeft {
  49% {
    -moz-transform: translate(100%);
  }
  50% {
    opacity: 0;
    -moz-transform: translate(-100%);
  }
  51% {
    opacity: 1;
  }
}
@keyframes toRightFromLeft {
  49% {
    transform: translate(100%);
  }
  50% {
    opacity: 0;
    transform: translate(-100%);
  }
  51% {
    opacity: 1;
  }
}

@-webkit-keyframes toBottomFromTop {
    49% {
        -webkit-transform: translateY(100%);
    }
    50% {
        opacity: 0;
        -webkit-transform: translateY(-100%);
    }
    51% {
        opacity: 1;
    }
}
@-moz-keyframes toBottomFromTop {
    49% {
        -moz-transform: translateY(100%);
    }
    50% {
        opacity: 0;
        -moz-transform: translateY(-100%);
    }
    51% {
        opacity: 1;
    }
}
@keyframes toBottomFromTop {
    49% {
        transform: translateY(100%);
    }
    50% {
        opacity: 0;
        transform: translateY(-100%);
    }
    51% {
        opacity: 1;
    }
}

@-webkit-keyframes toTopFromBottom {
    49% {
        -webkit-transform: translateY(-100%);
    }
    50% {
        opacity: 0;
        -webkit-transform: translateY(100%);
    }
    51% {
        opacity: 1;
    }
}
@-moz-keyframes toTopFromBottom {
    49% {
        -moz-transform: translateY(-100%);
    }
    50% {
        opacity: 0;
        -moz-transform: translateY(100%);
    }
    51% {
        opacity: 1;
    }
}
@keyframes toTopFromBottom {
    49% {
        transform: translateY(-100%);
    }
    50% {
        opacity: 0;
        transform: translateY(100%);
    }
    51% {
        opacity: 1;
    }
}


@-webkit-keyframes item_hexagon {
0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg); } 
}

@-moz-keyframes item_hexagon {
0% {
    -moz-transform: rotate(0deg);
    transform: rotate(0deg); }
100% {
    -moz-transform: rotate(360deg);
    transform: rotate(360deg); } 
}

@-o-keyframes item_hexagon {
0% {
    -o-transform: rotate(0deg);
    transform: rotate(0deg); }
100% {
    -o-transform: rotate(360deg);
    transform: rotate(360deg); } 
}

@keyframes item_hexagon {
0% {
    -webkit-transform: rotate(0deg);
    -moz-transform: rotate(0deg);
    -o-transform: rotate(0deg);
    transform: rotate(0deg); }
100% {
    -webkit-transform: rotate(360deg);
    -moz-transform: rotate(360deg);
    -o-transform: rotate(360deg);
    transform: rotate(360deg); } 
}

@-webkit-keyframes squares{
    0%{
        -webkit-transform:scale(1);
        transform:scale(1);
        opacity:0
    }
     20%{
        -webkit-transform:scale(1.24);
        transform:scale(1.24);
        opacity: 1
    }
    100%{
        -webkit-transform:scale(2.1);
        transform:scale(2.1);
        opacity:0
    }
}
@-moz-keyframes squares{
    0%{
        -moz-transform:scale(1);
        transform:scale(1);
        opacity:0
    }
     20%{
        -moz-transform:scale(1.24);
        transform:scale(1.24);
        opacity: 1
    }
    100%{
        -moz-transform:scale(2.1);
        transform:scale(2.1);
        opacity:0
    }
}
@-o-keyframes squares{
    0%{
        -o-transform:scale(1);
        transform:scale(1);
        opacity:0
    }
     20%{
        -o-transform:scale(1.24);
        transform:scale(1.24);
        opacity: 1
    }
    100%{
        -o-transform:scale(2.1);
        transform:scale(2.1);
        opacity:0
    }
}
@keyframes squares{
    0%{
        -webkit-transform:scale(1);
        -moz-transform:scale(1);
        -o-transform:scale(1);
        transform:scale(1);
        opacity:0
    }
     20%{
        -webkit-transform:scale(1.24);
        -moz-transform:scale(1.24);
        -o-transform:scale(1.24);
        transform:scale(1.24);
        opacity: 1
    }
     100%{
        -webkit-transform:scale(2.1);
        -moz-transform:scale(2.1);
        -o-transform:scale(2.1);
        transform:scale(2.1);
        opacity:0
    }
}

$max-xs: "screen and (max-width: 575px)";
$max-sm: "screen and (max-width: 767px)";
$max-md: "screen and (max-width: 991px)";
$max-slg: "screen and (max-width: 1023px)";
$max-lg: "screen and (max-width: 1199px)";
$max-lg2: "screen and (max-width: 1260px)";
$max-lg3: "screen and (max-width: 1280px)";
$max-xl: "screen and (max-width: 1400px)";

$min-sm: "screen and (min-width: 576px)";
$min-md: "screen and (min-width: 768px)";
$min-lg: "screen and (min-width: 992px)";
$min-xl: "screen and (min-width: 1200px)";
$min-xxl: "screen and (min-width: 1400px)";
$min-xxxl: "screen and (min-width: 1930px)";

$mm-sm: "(min-width: 576px) and (max-width: 767px)";
$mm-md: "(min-width: 768px) and (max-width: 991px)";
$mm-lg: "(min-width: 992px) and (max-width: 1199px)";
$mm-lg2: "(min-width: 992px) and (max-width: 1280px)";
$mm-xl: "(min-width: 1200px) and (max-width: 1400px)";

/* Custom Mixin */
$color_dark: #1e2331;
$color_dark2: #000615;
$rgba_dark1: $color_text1;
$color_text1: rgba(0,0,0,0.66);
$color_text2: rgba(0,0,0,0.87);
$box_shd: 0 3px 6px rgba(0,0,0,0.6);

/* Set Font Default */
@mixin font-family-default($body_default_font) {
  @if ($body_default_font == 'Roboto') {
    font-family: 'Roboto', sans-serif;
  }
}

@mixin font-family-heading($heading_default_font) {
  @if ($heading_default_font == 'Poppins') {
    font-family: 'Poppins', sans-serif;
  }
}
